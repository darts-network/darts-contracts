{
  "address": "0x705091874455028Bd0A8c08d007AF134a29c3fc6",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum HivePayments.PaymentReason",
          "name": "reason",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum HivePayments.PaymentDirection",
          "name": "direction",
          "type": "uint8"
        }
      ],
      "name": "Payment",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resourceProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "jobCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "jobCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "resultsCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeoutCollateral",
          "type": "uint256"
        }
      ],
      "name": "acceptResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resourceProvider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "resultsCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeoutCollateral",
          "type": "uint256"
        }
      ],
      "name": "addResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "jobCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeoutCollateral",
          "type": "uint256"
        }
      ],
      "name": "agreeJobCreator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resourceProvider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timeoutCollateral",
          "type": "uint256"
        }
      ],
      "name": "agreeResourceProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "jobCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timeoutCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mediationFee",
          "type": "uint256"
        }
      ],
      "name": "checkResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableChangeControllerAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableChangeTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getControllerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resourceProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "jobCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "jobCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "resultsCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mediationFee",
          "type": "uint256"
        }
      ],
      "name": "mediationAcceptResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resourceProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "jobCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "resultsCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mediationFee",
          "type": "uint256"
        }
      ],
      "name": "mediationRejectResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controllerAddress",
          "type": "address"
        }
      ],
      "name": "setControllerAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "setTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "jobCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeoutCollateral",
          "type": "uint256"
        }
      ],
      "name": "timeoutAgreeRefundJobCreator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resourceProvider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timeoutCollateral",
          "type": "uint256"
        }
      ],
      "name": "timeoutAgreeRefundResourceProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resourceProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "jobCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "resultsCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeoutCollateral",
          "type": "uint256"
        }
      ],
      "name": "timeoutJudgeResults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resourceProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "jobCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "resultsCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mediationFee",
          "type": "uint256"
        }
      ],
      "name": "timeoutMediateResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "dealId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "resourceProvider",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "jobCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "paymentCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeoutCollateral",
          "type": "uint256"
        }
      ],
      "name": "timeoutSubmitResults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf564d0af7bc97a447ceefc408915e42751fff1bba089167f435b6aff898e1ba5",
  "receipt": {
    "to": null,
    "from": "0x823531B7c7843D8c3821B19D70cbFb6173b9Cb02",
    "contractAddress": "0x705091874455028Bd0A8c08d007AF134a29c3fc6",
    "transactionIndex": 74,
    "gasUsed": "2403972",
    "logsBloom": "0x
    "blockHash": "0x3663c7a2c918e1683496d09bd86602623978058d0be7d16e198ed4d49038f9d2",
    "transactionHash": "0xf564d0af7bc97a447ceefc408915e42751fff1bba089167f435b6aff898e1ba5",
    "logs": [
      {
        "transactionIndex": 74,
        "blockNumber": 5351303,
        "transactionHash": "0xf564d0af7bc97a447ceefc408915e42751fff1bba089167f435b6aff898e1ba5",
        "address": "0x705091874455028Bd0A8c08d007AF134a29c3fc6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000823531b7c7843d8c3821b19d70cbfb6173b9cb02"
        ],
        "data": "0x",
        "logIndex": 81,
        "blockHash": "0x3663c7a2c918e1683496d09bd86602623978058d0be7d16e198ed4d49038f9d2"
      }
    ],
    "blockNumber": 5351303,
    "cumulativeGasUsed": "8855649",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b1c846de1a2fdbebc0425659c174617e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum HivePayments.PaymentReason\",\"name\":\"reason\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum HivePayments.PaymentDirection\",\"name\":\"direction\",\"type\":\"uint8\"}],\"name\":\"Payment\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resourceProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jobCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"jobCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultsCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeoutCollateral\",\"type\":\"uint256\"}],\"name\":\"acceptResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resourceProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resultsCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeoutCollateral\",\"type\":\"uint256\"}],\"name\":\"addResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"jobCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeoutCollateral\",\"type\":\"uint256\"}],\"name\":\"agreeJobCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resourceProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeoutCollateral\",\"type\":\"uint256\"}],\"name\":\"agreeResourceProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"jobCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeoutCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediationFee\",\"type\":\"uint256\"}],\"name\":\"checkResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableChangeControllerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableChangeTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getControllerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resourceProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jobCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"jobCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultsCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediationFee\",\"type\":\"uint256\"}],\"name\":\"mediationAcceptResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resourceProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jobCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultsCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediationFee\",\"type\":\"uint256\"}],\"name\":\"mediationRejectResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controllerAddress\",\"type\":\"address\"}],\"name\":\"setControllerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"jobCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeoutCollateral\",\"type\":\"uint256\"}],\"name\":\"timeoutAgreeRefundJobCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resourceProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeoutCollateral\",\"type\":\"uint256\"}],\"name\":\"timeoutAgreeRefundResourceProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resourceProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jobCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"resultsCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeoutCollateral\",\"type\":\"uint256\"}],\"name\":\"timeoutJudgeResults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resourceProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jobCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"resultsCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediationFee\",\"type\":\"uint256\"}],\"name\":\"timeoutMediateResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"dealId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"resourceProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"jobCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeoutCollateral\",\"type\":\"uint256\"}],\"name\":\"timeoutSubmitResults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Payment(string,address,uint256,uint8,uint8)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"addResult(string,address,uint256,uint256)\":{\"notice\":\"Results\"},\"agreeResourceProvider(string,address,uint256)\":{\"notice\":\"Agreements\"},\"mediationAcceptResult(string,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Mediation\"},\"timeoutAgreeRefundResourceProvider(string,address,uint256)\":{\"notice\":\"Timeouts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HivePayments.sol\":\"HivePayments\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/ControllerOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n// as well as being ownable (i.e. our admin wallet)\\n// this contract has a modifier called onlyController\\n// it works the same way as Ownable but only the Owner\\n// can change the controller address so it gives us a way of\\n// re-pointing contracts if needed\\ncontract ControllerOwnable is Ownable {\\n\\n  // the address of the controller that is allowed to call functions\\n  address private controllerAddress;\\n\\n  // used to \\\"freeze\\\" the controller address - even the admin cannot\\n  // change it from this point onwards\\n  bool private canChangeControllerAddress = true;\\n\\n  modifier onlyController() {\\n    _checkControllerAccess();\\n    _;\\n  }\\n\\n  function _checkControllerAccess() internal view virtual returns (bool) {\\n    require(controllerAddress != address(0), \\\"ControllerOwnable: Controller address must be defined\\\");\\n    require(_msgSender() == controllerAddress, \\\"ControllerOwnable: Only the controller can call this method\\\");\\n    return true;\\n  }\\n\\n  function setControllerAddress(address _controllerAddress) public onlyOwner {\\n    require(_controllerAddress != address(0), \\\"ControllerOwnable: Controller address must be defined\\\");\\n    require(canChangeControllerAddress, \\\"ControllerOwnable: canChangeControllerAddress is disabled\\\");\\n    controllerAddress = _controllerAddress;\\n  }\\n\\n  function getControllerAddress() public view returns (address) {\\n    return controllerAddress;\\n  }\\n\\n  function disableChangeControllerAddress() public onlyOwner {\\n    canChangeControllerAddress = false;\\n  }\\n}\\n\",\"keccak256\":\"0xecfd8b0beb12340f51cefee5e121932fa7aee0a41fb7d0233966419d153ef429\",\"license\":\"Apache-2.0\"},\"contracts/HivePayments.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"./IHiveToken.sol\\\";\\nimport \\\"./ControllerOwnable.sol\\\";\\nimport \\\"./IHivePayments.sol\\\";\\n\\n// import \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n// import \\\"hardhat/console.sol\\\";\\n// console.log(\\\"ensureDeal\\\");\\n// console.log(Strings.toString(uint256(SharedStructs.AgreementState.DealNegotiating)));\\n// console.log(Strings.toString(uint256(agreements[dealId].state)));\\n\\ncontract HivePayments is ControllerOwnable, Initializable {\\n\\n  /**\\n   * Types\\n   */\\n\\n  // the address of the HiveToken.sol contract\\n  address private tokenAddress;\\n  IHiveToken private tokenContract;\\n\\n  // used to cut off upgrades for the remote contract\\n  bool private canChangeTokenAddress = true;\\n\\n  /**\\n   * Enums\\n   */\\n  enum PaymentReason {\\n\\n    // the money the JC puts up to pay for the job\\n    PaymentCollateral,\\n\\n    // the money the RP puts up to attest it's results are correct\\n    ResultsCollateral,\\n\\n    // the money the RP, JC and Mediator all put up to prevent timeouts\\n    TimeoutCollateral,\\n\\n    // the money the RP gets paid for the job for running it successfully\\n    JobPayment,\\n\\n    // the money the JC pays the mediator for resolving a dispute\\n    MediationFee\\n  }\\n\\n  enum PaymentDirection {\\n\\n    // money flowing into the contract\\n    // i.e. we GET paid\\n    PaidIn,\\n\\n    // money paid out to services\\n    // i.e. we are PAYING\\n    PaidOut,\\n\\n    // collateral that is locked up being refunded\\n    Refunded,\\n    \\n    // collateral that is locked up being slashed\\n    Slashed\\n  }\\n\\n  /**\\n   * Events\\n   */\\n  event Payment(\\n    string dealId,\\n    address payee,\\n    uint256 amount,\\n    PaymentReason reason,\\n    PaymentDirection direction\\n  );\\n\\n  /**\\n   * Init\\n   */\\n\\n  // used for debugging\\n  mapping(address => string) private accountNames;\\n\\n  // https://docs.openzeppelin.com/upgrades-plugins/1.x/writing-upgradeable\\n  function initialize(\\n    address _tokenAddress\\n  ) public initializer {\\n    setTokenAddress(_tokenAddress);\\n\\n    // this is only for debugging\\n    // accountNames[address(0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266)] = \\\"admin\\\";\\n    // accountNames[address(0x70997970C51812dc3A010C7d01b50e0d17dc79C8)] = \\\"faucet\\\";\\n    // accountNames[address(0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC)] = \\\"solver\\\";\\n    // accountNames[address(0x90F79bf6EB2c4f870365E785982E1f101E93b906)] = \\\"mediator\\\";\\n    // accountNames[address(0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65)] = \\\"resource_provider\\\";\\n    // accountNames[address(0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc)] = \\\"job_creator\\\";\\n    // accountNames[address(0x976EA74026E726554dB657fA54763abd0C3a0aa9)] = \\\"directory\\\";\\n  }\\n\\n  // the HiveToken.sol we are calling payinEscrow and payoutEscrow on\\n  function setTokenAddress(address _tokenAddress) public onlyOwner {\\n    require(_tokenAddress != address(0), \\\"HivePayments: Token address must be defined\\\");\\n    require(canChangeTokenAddress, \\\"HiveToken: canChangeTokenAddress is disabled\\\");\\n    tokenAddress = _tokenAddress;\\n    tokenContract = IHiveToken(_tokenAddress);\\n  }\\n\\n  function getTokenAddress() public view returns(address) {\\n    return tokenAddress;\\n  }\\n\\n  // set for canChangePaymentsAddress\\n  function disableChangeTokenAddress() public onlyOwner {\\n    canChangeTokenAddress = false;\\n  }\\n\\n  /**\\n   * Controller handlers\\n   * \\n   * these methods are called by the controller to wrap various payment\\n   * scenarios - hence they are all onlyOwner\\n   */\\n\\n  /**\\n   * Agreements\\n   */\\n\\n  // * pay in the timeout collateral\\n  function agreeResourceProvider(\\n    string memory dealId,\\n    address resourceProvider,\\n    uint256 timeoutCollateral\\n  ) public onlyController {\\n    // we check this here to double check who we are about to charge (the RP)\\n    // is who signed the TX and so we can take the money\\n    require(tx.origin == resourceProvider, \\\"HivePayments: Can only be called by the RP\\\");\\n    _payEscrow(\\n      dealId,\\n      timeoutCollateral,\\n      PaymentReason.TimeoutCollateral\\n    );\\n  }\\n\\n  // * pay in the payment collateral and timeout collateral\\n  function agreeJobCreator(\\n    string memory dealId,\\n    address jobCreator,\\n    uint256 paymentCollateral,\\n    uint256 timeoutCollateral\\n  ) public onlyController {\\n    require(tx.origin == jobCreator, \\\"HivePayments: Can only be called by the JC\\\");\\n    _payEscrow(\\n      dealId,\\n      paymentCollateral,\\n      PaymentReason.PaymentCollateral\\n    );\\n    _payEscrow(\\n      dealId,\\n      timeoutCollateral,\\n      PaymentReason.TimeoutCollateral\\n    );\\n  }\\n\\n  /**\\n   * Results\\n   */\\n\\n  // * pay back the timeout collateral\\n  // * pay in the results collateral\\n  function addResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    uint256 resultsCollateral,\\n    uint256 timeoutCollateral\\n  ) public onlyController {\\n    require(tx.origin == resourceProvider, \\\"HivePayments: Can only be called by the RP\\\");\\n    _payEscrow(\\n      dealId,\\n      resultsCollateral,\\n      PaymentReason.ResultsCollateral\\n    );\\n    _refundEscrow(\\n      dealId,\\n      resourceProvider,\\n      timeoutCollateral,\\n      PaymentReason.TimeoutCollateral\\n    );\\n  }\\n\\n  // * pay the RP the job cost\\n  // * refund the RP the results collateral\\n  // * refund the JC the job collateral minus the job cost\\n  // * refund the JC the timeout collateral\\n  function acceptResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 jobCost,\\n    uint256 paymentCollateral,\\n    uint256 resultsCollateral,\\n    uint256 timeoutCollateral\\n  ) public onlyController {\\n    require(tx.origin == jobCreator, \\\"HivePayments: Can only be called by the JC\\\");\\n\\n    // what if the final job cost is more than the payment collateral?\\n    // well - we have to cap the job cost at that collateral\\n    // true - the RP has lost money but they agreed to the deal\\n    uint256 actualPayment = jobCost;\\n    uint256 jcRefund = 0;\\n    if(jobCost > paymentCollateral) {\\n      actualPayment = paymentCollateral;\\n    } else {\\n      jcRefund = paymentCollateral - jobCost;\\n    }\\n\\n    // pay the RP the actualPayment\\n    _payOut(\\n      dealId,\\n      jobCreator,\\n      resourceProvider,\\n      actualPayment,\\n      PaymentReason.JobPayment\\n    );\\n\\n    // if the job cost more than the payment collateral then we shold not go negative\\n    // otherwise we are paying out more than the JC has put in\\n    //\\n    // the RP is loosing out a bit here but they agreed to doing the job\\n    if(jcRefund > 0) {\\n      _refundEscrow(\\n        dealId,\\n        jobCreator,\\n        jcRefund,\\n        PaymentReason.PaymentCollateral\\n      );\\n    }\\n\\n    // refund the JC timeout collateral\\n    _refundEscrow(\\n      dealId,\\n      jobCreator,\\n      timeoutCollateral,\\n      PaymentReason.TimeoutCollateral\\n    );\\n\\n    // refund the RP results collateral\\n    _refundEscrow(\\n      dealId,\\n      resourceProvider,\\n      resultsCollateral,\\n      PaymentReason.ResultsCollateral\\n    );\\n  }\\n\\n  // * charge the JC the mediation fee\\n  // * refund the JC the timeout collateral\\n  function checkResult(\\n    string memory dealId,\\n    address jobCreator,\\n    uint256 timeoutCollateral,\\n    uint256 mediationFee\\n  ) public onlyController {\\n    require(tx.origin == jobCreator, \\\"HivePayments: Can only be called by the JC\\\");\\n    \\n    // the refund of the timeout collateral\\n    _refundEscrow(\\n      dealId,\\n      jobCreator,\\n      timeoutCollateral,\\n      PaymentReason.TimeoutCollateral\\n    );\\n\\n    // the payment of the mediation fee\\n    _payEscrow(\\n      dealId,\\n      mediationFee,\\n      PaymentReason.MediationFee\\n    );\\n  }\\n\\n  /**\\n   * Mediation\\n   */\\n\\n  // * pay the RP the job cost\\n  // * refund the RP the results collateral\\n  // * refund the JC the job collateral minus the job cost\\n  // * pay the mediator for mediating\\n  function mediationAcceptResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 jobCost,\\n    uint256 paymentCollateral,\\n    uint256 resultsCollateral,\\n    uint256 mediationFee\\n  ) public onlyController {\\n    uint256 actualPayment = jobCost;\\n    uint256 jcRefund = 0;\\n    if(jobCost > paymentCollateral) {\\n      actualPayment = paymentCollateral;\\n    } else {\\n      jcRefund = paymentCollateral - jobCost;\\n    }\\n    \\n    // pay the RP the job cost from the JC\\n    _payOut(\\n      dealId,\\n      jobCreator,\\n      resourceProvider,\\n      actualPayment,\\n      PaymentReason.JobPayment\\n    );\\n\\n    // pay the mediator the fee from the JC\\n    _payOut(\\n      dealId,\\n      jobCreator,\\n      tx.origin,\\n      mediationFee,\\n      PaymentReason.MediationFee\\n    );\\n\\n    // if the job cost more than the payment collateral then we shold not go negative\\n    // otherwise we are paying out more than the JC has put in\\n    //\\n    // the RP is loosing out a bit here but they agreed to doing the job\\n    if(jcRefund > 0) {\\n\\n      // refund the JC the diff between payment collateral and job cost\\n      _refundEscrow(\\n        dealId,\\n        jobCreator,\\n        jcRefund,\\n        PaymentReason.PaymentCollateral\\n      );\\n    }\\n\\n    // refund the RP the results collateral\\n    _refundEscrow(\\n      dealId,\\n      resourceProvider,\\n      resultsCollateral,\\n      PaymentReason.ResultsCollateral\\n    );\\n  }\\n\\n  // * refund the JC their payment collateral\\n  // * slash the RP's results collateral\\n  // * pay the mediator for mediating\\n  function mediationRejectResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 paymentCollateral,\\n    uint256 resultsCollateral,\\n    uint256 mediationFee\\n  ) public onlyController {\\n    // refund the JC their payment collateral\\n    _refundEscrow(\\n      dealId,\\n      jobCreator,\\n      paymentCollateral,\\n      PaymentReason.PaymentCollateral\\n    );\\n\\n    // pay the mediator the fee from the JC\\n    _payOut(\\n      dealId,\\n      jobCreator,\\n      tx.origin,\\n      mediationFee,\\n      PaymentReason.MediationFee\\n    );\\n\\n    // slash the RP\\n    _slashEscrow(\\n      dealId,\\n      resourceProvider,\\n      resultsCollateral,\\n      PaymentReason.ResultsCollateral\\n    );\\n  }\\n\\n  /**\\n   * Timeouts\\n   */\\n  function timeoutAgreeRefundResourceProvider(\\n    string memory dealId,\\n    address resourceProvider,\\n    uint256 timeoutCollateral\\n  ) public onlyController {\\n    require(tx.origin == resourceProvider, \\\"HivePayments: Can only be called by the RP\\\");\\n    // the refund of the job collateral to the JC\\n    _refundEscrow(\\n      dealId,\\n      resourceProvider,\\n      timeoutCollateral,\\n      PaymentReason.TimeoutCollateral\\n    );\\n  }\\n\\n  function timeoutAgreeRefundJobCreator(\\n    string memory dealId,\\n    address jobCreator,\\n    uint256 paymentCollateral,\\n    uint256 timeoutCollateral\\n  ) public onlyController {\\n    require(tx.origin == jobCreator, \\\"HivePayments: Can only be called by the JC\\\");\\n    // the refund of the job collateral to the JC\\n    _refundEscrow(\\n      dealId,\\n      jobCreator,\\n      paymentCollateral,\\n      PaymentReason.PaymentCollateral\\n    );\\n\\n    // the refund of the job collateral to the JC\\n    _refundEscrow(\\n      dealId,\\n      jobCreator,\\n      timeoutCollateral,\\n      PaymentReason.TimeoutCollateral\\n    );\\n  }\\n\\n  // * pay back the JC's job collateral\\n  // * pay back the JC's timeout collateral\\n  // * slash the RP's results collateral\\n  function timeoutSubmitResults(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 paymentCollateral,\\n    uint256 timeoutCollateral\\n  ) public onlyController {\\n    require(tx.origin == jobCreator, \\\"HivePayments: Can only be called by the JC\\\");\\n    // the refund of the job collateral to the JC\\n    _refundEscrow(\\n      dealId,\\n      jobCreator,\\n      paymentCollateral,\\n      PaymentReason.PaymentCollateral\\n    );\\n\\n    // the refund of the job collateral to the JC\\n    _refundEscrow(\\n      dealId,\\n      jobCreator,\\n      timeoutCollateral,\\n      PaymentReason.TimeoutCollateral\\n    );\\n    \\n    // the slashing of the timeout collateral for the RP\\n    _slashEscrow(\\n      dealId,\\n      resourceProvider,\\n      timeoutCollateral,\\n      PaymentReason.TimeoutCollateral\\n    );\\n  }\\n\\n  // * pay back the RP's results collateral\\n  // * pay the RP the cost of the job\\n  // * slash the JC's timeout collateral\\n  // * slash the JC's job collateral\\n  function timeoutJudgeResults(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 resultsCollateral,\\n    uint256 timeoutCollateral\\n  ) public onlyController {\\n    require(tx.origin == resourceProvider, \\\"HivePayments: Can only be called by the RP\\\");\\n    // the refund of the results collateral to the RP\\n    _refundEscrow(\\n      dealId,\\n      resourceProvider,\\n      resultsCollateral,\\n      PaymentReason.ResultsCollateral\\n    );\\n\\n    // the slashing of the timeout collateral for the RP\\n    _slashEscrow(\\n      dealId,\\n      jobCreator,\\n      timeoutCollateral,\\n      PaymentReason.TimeoutCollateral\\n    );\\n  }\\n\\n  // * pay back the RP's results collateral\\n  // * pay back the JC's payment collateral\\n  // * pay back the JC's mediation fee\\n  function timeoutMediateResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 paymentCollateral,\\n    uint256 resultsCollateral,\\n    uint256 mediationFee\\n  ) public onlyController {\\n    require(tx.origin == resourceProvider || tx.origin == jobCreator, \\\"HivePayments: Can only be called by the RP or JC\\\");\\n    // the refund of the results collateral to the RP\\n    _refundEscrow(\\n      dealId,\\n      resourceProvider,\\n      resultsCollateral,\\n      PaymentReason.ResultsCollateral\\n    );\\n\\n    // the refund of the payment collateral to the JC\\n    _refundEscrow(\\n      dealId,\\n      jobCreator,\\n      paymentCollateral,\\n      PaymentReason.PaymentCollateral\\n    );\\n\\n    // the refund of the mediation fee to the JC\\n    _refundEscrow(\\n      dealId,\\n      jobCreator,\\n      mediationFee,\\n      PaymentReason.MediationFee\\n    );\\n  }\\n\\n  /**\\n   * Payment utils\\n   */\\n\\n\\n  function _payEscrow(\\n    string memory dealId,\\n    uint256 amount,\\n    PaymentReason reason\\n  ) private {\\n    // we check they have that much in their token balance before moving to tokens to us\\n    require(tokenContract.balanceOf(tx.origin) >= amount, \\\"HivePayments: Insufficient balance\\\");\\n\\n    // console.log(\\\"_payEscrow\\\");\\n    // console.log(accountNames[tx.origin]);\\n    // console.log(amount);\\n\\n    bool success = tokenContract.payEscrow(amount);\\n    require(success, \\\"HivePayments: Pay escrow failed\\\");\\n\\n    emit Payment(\\n      dealId,\\n      tx.origin,\\n      amount,\\n      reason,\\n      PaymentDirection.PaidIn\\n    );\\n  }\\n\\n  function _refundEscrow(\\n    string memory dealId,\\n    address toAddress,\\n    uint256 amount,\\n    PaymentReason reason\\n  ) private {\\n    // console.log(\\\"_refundEscrow\\\");\\n    // console.log(accountNames[toAddress]);\\n    // console.log(amount);\\n\\n    bool success = tokenContract.refundEscrow(toAddress, amount);\\n    require(success, \\\"HivePayments: Refund escrow failed\\\");\\n\\n    emit Payment(\\n      dealId,\\n      toAddress,\\n      amount,\\n      reason,\\n      PaymentDirection.Refunded\\n    );\\n  }\\n\\n  function _payOut(\\n    string memory dealId,\\n    address fromAddress,\\n    address toAddress,\\n    uint256 amount,\\n    PaymentReason reason\\n  ) private {\\n    // console.log(\\\"_payJob\\\");\\n    // console.log(accountNames[fromAddress]);\\n    // console.log(accountNames[toAddress]);\\n    // console.log(amount);\\n\\n    bool success = tokenContract.payJob(fromAddress, toAddress, amount);\\n    require(success, \\\"HivePayments: Pay job failed\\\");\\n\\n    emit Payment(\\n      dealId,\\n      toAddress,\\n      amount,\\n      reason,\\n      PaymentDirection.PaidOut\\n    );\\n  }\\n\\n  function _slashEscrow(\\n    string memory dealId,\\n    address slashedAddress,\\n    uint256 amount,\\n    PaymentReason reason\\n  ) private {\\n    // console.log(\\\"_slashEscrow\\\");\\n    // console.log(accountNames[slashedAddress]);\\n    // console.log(amount);\\n\\n    bool success = tokenContract.slashEscrow(slashedAddress, amount);\\n    require(success, \\\"HivePayments: Slash escrow failed\\\");\\n\\n    emit Payment(\\n      dealId,\\n      slashedAddress,\\n      amount,\\n      reason,\\n      PaymentDirection.Slashed\\n    );\\n  }\\n}\\n\",\"keccak256\":\"0xba385d493770f10ad68de41e7c0e39bc81d2390672001e85bb56a3c48949d575\",\"license\":\"Apache-2.0\"},\"contracts/IHivePayments.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.6;\\n\\ninterface IHivePayments {\\n\\n  /**\\n   * Init\\n   */\\n\\n  function setTokenAddress(\\n    address _tokenAddress\\n  ) external;\\n\\n  /**\\n   * Agreements\\n   */\\n  function agreeResourceProvider(\\n    string memory dealId,\\n    address resourceProvider,\\n    uint256 timeoutCollateral\\n  ) external;\\n\\n  function agreeJobCreator(\\n    string memory dealId,\\n    address jobCreator,\\n    uint256 paymentCollateral,\\n    uint256 timeoutCollateral\\n  ) external;\\n\\n  /**\\n   * Results\\n   */\\n\\n  function addResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    uint256 resultsCollateral,\\n    uint256 timeoutCollateral\\n  ) external;\\n\\n  function acceptResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 jobCost,\\n    uint256 paymentCollateral,\\n    uint256 resultsCollateral,\\n    uint256 timeoutCollateral\\n  ) external;\\n\\n  function checkResult(\\n    string memory dealId,\\n    address jobCreator,\\n    uint256 timeoutCollateral,\\n    uint256 mediationFee\\n  ) external;\\n\\n  /**\\n   * Mediation\\n   */\\n\\n  function mediationAcceptResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 jobCost,\\n    uint256 paymentCollateral,\\n    uint256 resultsCollateral,\\n    uint256 mediationFee\\n  ) external;\\n\\n  function mediationRejectResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 paymentCollateral,\\n    uint256 resultsCollateral,\\n    uint256 mediationFee\\n  ) external;\\n\\n  /**\\n   * Timeouts\\n   */\\n\\n  function timeoutAgreeRefundResourceProvider(\\n    string memory dealId,\\n    address resourceProvider,\\n    uint256 timeoutCollateral\\n  ) external;\\n\\n  function timeoutAgreeRefundJobCreator(\\n    string memory dealId,\\n    address jobCreator,\\n    uint256 paymentCollateral,\\n    uint256 timeoutCollateral\\n  ) external;\\n\\n  function timeoutSubmitResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 paymentCollateral,\\n    uint256 timeoutCollateral\\n  ) external;\\n\\n  function timeoutJudgeResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 resultsCollateral,\\n    uint256 timeoutCollateral\\n  ) external;\\n\\n  function timeoutMediateResult(\\n    string memory dealId,\\n    address resourceProvider,\\n    address jobCreator,\\n    uint256 paymentCollateral,\\n    uint256 resultsCollateral,\\n    uint256 mediationFee\\n  ) external;\\n  \\n}\\n\",\"keccak256\":\"0xdf1ac69c856ab0fe38b0dfa95f7fc71076afb6b2ae551527f51e86f75d255e2b\",\"license\":\"Apache-2.0\"},\"contracts/IHiveToken.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IHiveToken is IERC20 {\\n  function escrowBalanceOf(\\n    address _address\\n  ) external returns (uint256);\\n\\n  function payEscrow(\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  function refundEscrow(\\n    address toAddress,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  function payJob(\\n    address fromAddress,\\n    address toAddress,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  function slashEscrow(\\n    address slashedAddress,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x782c53d21be5284b5aaf0ea9b8695ec6727391a09f6912a64c59fefee679d836\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405260018060146101000a81548160ff0219169083151502179055506001600360146101000a81548160ff0219169083151502179055503480156200004657600080fd5b50620000676200005b6200006d60201b60201c565b6200007560201b60201c565b62000139565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61296a80620001496000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639e3868dc116100b8578063b91880351161007c578063b9188035146102d5578063c4d66de8146102f1578063c57380a21461030d578063d2485cce1461032b578063f2fde38b14610347578063f3d3d4481461036357610142565b80639e3868dc1461025b578063a470295814610277578063aea3825114610281578063afe1dff71461029d578063b1356714146102b957610142565b80632a1f90721161010a5780632a1f9072146101d557806338698529146101f15780634bc28da11461020d578063715018a614610217578063823f3de1146102215780638da5cb5b1461023d57610142565b806302fd8f801461014757806309cab510146101635780630ef0d89e1461017f57806310fe9ae81461019b57806326a4e8d2146101b9575b600080fd5b610161600480360381019061015c91906119a6565b61037f565b005b61017d60048036038101906101789190611a3d565b610424565b005b61019960048036038101906101949190611ac0565b6104ba565b005b6101a3610543565b6040516101b09190611b3e565b60405180910390f35b6101d360048036038101906101ce9190611b59565b61056d565b005b6101ef60048036038101906101ea9190611b86565b6106b8565b005b61020b600480360381019061020691906119a6565b610732565b005b6102156107ca565b005b61021f6107ef565b005b61023b60048036038101906102369190611c44565b610803565b005b6102456108df565b6040516102529190611b3e565b60405180910390f35b61027560048036038101906102709190611ac0565b610908565b005b61027f610990565b005b61029b60048036038101906102969190611a3d565b6109b5565b005b6102b760048036038101906102b29190611a3d565b610a4b565b005b6102d360048036038101906102ce9190611b86565b610ae2565b005b6102ef60048036038101906102ea9190611a3d565b610bc9565b005b61030b60048036038101906103069190611b59565b610c5e565b005b610315610da1565b6040516103229190611b3e565b60405180910390f35b61034560048036038101906103409190611c44565b610dcb565b005b610361600480360381019061035c9190611b59565b610e04565b005b61037d60048036038101906103789190611b59565b610e87565b005b610387610f91565b508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146103f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ed90611d70565b60405180910390fd5b61040385848460006110c1565b61041085848360026110c1565b61041d85858360026111ec565b5050505050565b61042c610f91565b508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161461049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049290611e02565b60405180910390fd5b6104a784836001611317565b6104b484848360026110c1565b50505050565b6104c2610f91565b508173ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890611e02565b60405180910390fd5b61053e83838360026110c1565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61057561151d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db90611e94565b60405180910390fd5b600360149054906101000a900460ff16610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062a90611f26565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106c0610f91565b5060008490506000848611156106d8578491506106e7565b85856106e49190611f75565b90505b6106f589888a85600361159b565b61070389883286600461159b565b600081111561071a5761071989888360006110c1565b5b61072789898660016110c1565b505050505050505050565b61073a610f91565b508373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a090611e02565b60405180910390fd5b6107b685858460016110c1565b6107c385848360026111ec565b5050505050565b6107d261151d565b6000600360146101000a81548160ff021916908315150217905550565b6107f761151d565b61080160006116c9565b565b61080b610f91565b508473ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16148061087157508373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b6108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a79061201b565b60405180910390fd5b6108bd86868460016110c1565b6108ca86858560006110c1565b6108d786858360046110c1565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610910610f91565b508173ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161461097f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097690611e02565b60405180910390fd5b61098b83826002611317565b505050565b61099861151d565b6000600160146101000a81548160ff021916908315150217905550565b6109bd610f91565b508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2390611d70565b60405180910390fd5b610a3984848460026110c1565b610a4584826004611317565b50505050565b610a53610f91565b508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab990611d70565b60405180910390fd5b610acf84848460006110c1565b610adc84848360026110c1565b50505050565b610aea610f91565b508473ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610b59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5090611d70565b60405180910390fd5b6000849050600084861115610b7057849150610b7f565b8585610b7c9190611f75565b90505b610b8d89888a85600361159b565b6000811115610ba457610ba389888360006110c1565b5b610bb189888560026110c1565b610bbe89898660016110c1565b505050505050505050565b610bd1610f91565b508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611d70565b60405180910390fd5b610c4c84836000611317565b610c5884826002611317565b50505050565b6000600160169054906101000a900460ff16159050808015610c91575060018060159054906101000a900460ff1660ff16105b80610cbf5750610ca03061178d565b158015610cbe575060018060159054906101000a900460ff1660ff16145b5b610cfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf5906120ad565b60405180910390fd5b60018060156101000a81548160ff021916908360ff1602179055508015610d3a5760018060166101000a81548160ff0219169083151502179055505b610d438261056d565b8015610d9d576000600160166101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610d94919061211f565b60405180910390a15b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610dd3610f91565b50610de186858560006110c1565b610def86853284600461159b565b610dfc86868460016111ec565b505050505050565b610e0c61151d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e72906121ac565b60405180910390fd5b610e84816116c9565b50565b610e8f61151d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610efe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef59061223e565b60405180910390fd5b600160149054906101000a900460ff16610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f44906122d0565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101a9061223e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110646117b0565b73ffffffffffffffffffffffffffffffffffffffff16146110ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b190612362565b60405180910390fd5b6001905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663599efa6b85856040518363ffffffff1660e01b8152600401611120929190612391565b6020604051808303816000875af115801561113f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116391906123f2565b9050806111a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119c90612491565b60405180910390fd5b7f64861f505d0cfce7a0cc3629c70eb54f7de27be35939b48300935694958a98428585858560026040516111dd9594939291906125de565b60405180910390a15050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388c2bdfe85856040518363ffffffff1660e01b815260040161124b929190612391565b6020604051808303816000875af115801561126a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128e91906123f2565b9050806112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c7906126aa565b60405180910390fd5b7f64861f505d0cfce7a0cc3629c70eb54f7de27be35939b48300935694958a98428585858560036040516113089594939291906125de565b60405180910390a15050505050565b81600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231326040518263ffffffff1660e01b81526004016113739190611b3e565b602060405180830381865afa158015611390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b491906126df565b10156113f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ec9061277e565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635407e93c846040518263ffffffff1660e01b8152600401611452919061279e565b6020604051808303816000875af1158015611471573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149591906123f2565b9050806114d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ce90612805565b60405180910390fd5b7f64861f505d0cfce7a0cc3629c70eb54f7de27be35939b48300935694958a984284328585600060405161150f9594939291906125de565b60405180910390a150505050565b6115256117b0565b73ffffffffffffffffffffffffffffffffffffffff166115436108df565b73ffffffffffffffffffffffffffffffffffffffff1614611599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159090612871565b60405180910390fd5b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663065e86c88686866040518463ffffffff1660e01b81526004016115fc93929190612891565b6020604051808303816000875af115801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f91906123f2565b905080611681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167890612914565b60405180910390fd5b7f64861f505d0cfce7a0cc3629c70eb54f7de27be35939b48300935694958a98428685858560016040516116b99594939291906125de565b60405180910390a1505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61181f826117d6565b810181811067ffffffffffffffff8211171561183e5761183d6117e7565b5b80604052505050565b60006118516117b8565b905061185d8282611816565b919050565b600067ffffffffffffffff82111561187d5761187c6117e7565b5b611886826117d6565b9050602081019050919050565b82818337600083830152505050565b60006118b56118b084611862565b611847565b9050828152602081018484840111156118d1576118d06117d1565b5b6118dc848285611893565b509392505050565b600082601f8301126118f9576118f86117cc565b5b81356119098482602086016118a2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061193d82611912565b9050919050565b61194d81611932565b811461195857600080fd5b50565b60008135905061196a81611944565b92915050565b6000819050919050565b61198381611970565b811461198e57600080fd5b50565b6000813590506119a08161197a565b92915050565b600080600080600060a086880312156119c2576119c16117c2565b5b600086013567ffffffffffffffff8111156119e0576119df6117c7565b5b6119ec888289016118e4565b95505060206119fd8882890161195b565b9450506040611a0e8882890161195b565b9350506060611a1f88828901611991565b9250506080611a3088828901611991565b9150509295509295909350565b60008060008060808587031215611a5757611a566117c2565b5b600085013567ffffffffffffffff811115611a7557611a746117c7565b5b611a81878288016118e4565b9450506020611a928782880161195b565b9350506040611aa387828801611991565b9250506060611ab487828801611991565b91505092959194509250565b600080600060608486031215611ad957611ad86117c2565b5b600084013567ffffffffffffffff811115611af757611af66117c7565b5b611b03868287016118e4565b9350506020611b148682870161195b565b9250506040611b2586828701611991565b9150509250925092565b611b3881611932565b82525050565b6000602082019050611b536000830184611b2f565b92915050565b600060208284031215611b6f57611b6e6117c2565b5b6000611b7d8482850161195b565b91505092915050565b600080600080600080600060e0888a031215611ba557611ba46117c2565b5b600088013567ffffffffffffffff811115611bc357611bc26117c7565b5b611bcf8a828b016118e4565b9750506020611be08a828b0161195b565b9650506040611bf18a828b0161195b565b9550506060611c028a828b01611991565b9450506080611c138a828b01611991565b93505060a0611c248a828b01611991565b92505060c0611c358a828b01611991565b91505092959891949750929550565b60008060008060008060c08789031215611c6157611c606117c2565b5b600087013567ffffffffffffffff811115611c7f57611c7e6117c7565b5b611c8b89828a016118e4565b9650506020611c9c89828a0161195b565b9550506040611cad89828a0161195b565b9450506060611cbe89828a01611991565b9350506080611ccf89828a01611991565b92505060a0611ce089828a01611991565b9150509295509295509295565b600082825260208201905092915050565b7f486976655061796d656e74733a2043616e206f6e6c792062652063616c6c656460008201527f20627920746865204a4300000000000000000000000000000000000000000000602082015250565b6000611d5a602a83611ced565b9150611d6582611cfe565b604082019050919050565b60006020820190508181036000830152611d8981611d4d565b9050919050565b7f486976655061796d656e74733a2043616e206f6e6c792062652063616c6c656460008201527f2062792074686520525000000000000000000000000000000000000000000000602082015250565b6000611dec602a83611ced565b9150611df782611d90565b604082019050919050565b60006020820190508181036000830152611e1b81611ddf565b9050919050565b7f486976655061796d656e74733a20546f6b656e2061646472657373206d75737460008201527f20626520646566696e6564000000000000000000000000000000000000000000602082015250565b6000611e7e602b83611ced565b9150611e8982611e22565b604082019050919050565b60006020820190508181036000830152611ead81611e71565b9050919050565b7f48697665546f6b656e3a2063616e4368616e6765546f6b656e4164647265737360008201527f2069732064697361626c65640000000000000000000000000000000000000000602082015250565b6000611f10602c83611ced565b9150611f1b82611eb4565b604082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f8082611970565b9150611f8b83611970565b9250828203905081811115611fa357611fa2611f46565b5b92915050565b7f486976655061796d656e74733a2043616e206f6e6c792062652063616c6c656460008201527f20627920746865205250206f72204a4300000000000000000000000000000000602082015250565b6000612005603083611ced565b915061201082611fa9565b604082019050919050565b6000602082019050818103600083015261203481611ff8565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612097602e83611ced565b91506120a28261203b565b604082019050919050565b600060208201905081810360008301526120c68161208a565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006121096121046120ff846120cd565b6120e4565b6120d7565b9050919050565b612119816120ee565b82525050565b60006020820190506121346000830184612110565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612196602683611ced565b91506121a18261213a565b604082019050919050565b600060208201905081810360008301526121c581612189565b9050919050565b7f436f6e74726f6c6c65724f776e61626c653a20436f6e74726f6c6c657220616460008201527f6472657373206d75737420626520646566696e65640000000000000000000000602082015250565b6000612228603583611ced565b9150612233826121cc565b604082019050919050565b600060208201905081810360008301526122578161221b565b9050919050565b7f436f6e74726f6c6c65724f776e61626c653a2063616e4368616e6765436f6e7460008201527f726f6c6c6572416464726573732069732064697361626c656400000000000000602082015250565b60006122ba603983611ced565b91506122c58261225e565b604082019050919050565b600060208201905081810360008301526122e9816122ad565b9050919050565b7f436f6e74726f6c6c65724f776e61626c653a204f6e6c792074686520636f6e7460008201527f726f6c6c65722063616e2063616c6c2074686973206d6574686f640000000000602082015250565b600061234c603b83611ced565b9150612357826122f0565b604082019050919050565b6000602082019050818103600083015261237b8161233f565b9050919050565b61238b81611970565b82525050565b60006040820190506123a66000830185611b2f565b6123b36020830184612382565b9392505050565b60008115159050919050565b6123cf816123ba565b81146123da57600080fd5b50565b6000815190506123ec816123c6565b92915050565b600060208284031215612408576124076117c2565b5b6000612416848285016123dd565b91505092915050565b7f486976655061796d656e74733a20526566756e6420657363726f77206661696c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b600061247b602283611ced565b91506124868261241f565b604082019050919050565b600060208201905081810360008301526124aa8161246e565b9050919050565b600081519050919050565b60005b838110156124da5780820151818401526020810190506124bf565b60008484015250505050565b60006124f1826124b1565b6124fb8185611ced565b935061250b8185602086016124bc565b612514816117d6565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061255f5761255e61251f565b5b50565b60008190506125708261254e565b919050565b600061258082612562565b9050919050565b61259081612575565b82525050565b600481106125a7576125a661251f565b5b50565b60008190506125b882612596565b919050565b60006125c8826125aa565b9050919050565b6125d8816125bd565b82525050565b600060a08201905081810360008301526125f881886124e6565b90506126076020830187611b2f565b6126146040830186612382565b6126216060830185612587565b61262e60808301846125cf565b9695505050505050565b7f486976655061796d656e74733a20536c61736820657363726f77206661696c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612694602183611ced565b915061269f82612638565b604082019050919050565b600060208201905081810360008301526126c381612687565b9050919050565b6000815190506126d98161197a565b92915050565b6000602082840312156126f5576126f46117c2565b5b6000612703848285016126ca565b91505092915050565b7f486976655061796d656e74733a20496e73756666696369656e742062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612768602283611ced565b91506127738261270c565b604082019050919050565b600060208201905081810360008301526127978161275b565b9050919050565b60006020820190506127b36000830184612382565b92915050565b7f486976655061796d656e74733a2050617920657363726f77206661696c656400600082015250565b60006127ef601f83611ced565b91506127fa826127b9565b602082019050919050565b6000602082019050818103600083015261281e816127e2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061285b602083611ced565b915061286682612825565b602082019050919050565b6000602082019050818103600083015261288a8161284e565b9050919050565b60006060820190506128a66000830186611b2f565b6128b36020830185611b2f565b6128c06040830184612382565b949350505050565b7f486976655061796d656e74733a20506179206a6f62206661696c656400000000600082015250565b60006128fe601c83611ced565b9150612909826128c8565b602082019050919050565b6000602082019050818103600083015261292d816128f1565b905091905056fea2646970667358221220eddeb7317c85aeb10e9700a89ed803e89f7ab2a45f227f05b3fe5dc56a99dfe764736f6c63430008150033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c80639e3868dc116100b8578063b91880351161007c578063b9188035146102d5578063c4d66de8146102f1578063c57380a21461030d578063d2485cce1461032b578063f2fde38b14610347578063f3d3d4481461036357610142565b80639e3868dc1461025b578063a470295814610277578063aea3825114610281578063afe1dff71461029d578063b1356714146102b957610142565b80632a1f90721161010a5780632a1f9072146101d557806338698529146101f15780634bc28da11461020d578063715018a614610217578063823f3de1146102215780638da5cb5b1461023d57610142565b806302fd8f801461014757806309cab510146101635780630ef0d89e1461017f57806310fe9ae81461019b57806326a4e8d2146101b9575b600080fd5b610161600480360381019061015c91906119a6565b61037f565b005b61017d60048036038101906101789190611a3d565b610424565b005b61019960048036038101906101949190611ac0565b6104ba565b005b6101a3610543565b6040516101b09190611b3e565b60405180910390f35b6101d360048036038101906101ce9190611b59565b61056d565b005b6101ef60048036038101906101ea9190611b86565b6106b8565b005b61020b600480360381019061020691906119a6565b610732565b005b6102156107ca565b005b61021f6107ef565b005b61023b60048036038101906102369190611c44565b610803565b005b6102456108df565b6040516102529190611b3e565b60405180910390f35b61027560048036038101906102709190611ac0565b610908565b005b61027f610990565b005b61029b60048036038101906102969190611a3d565b6109b5565b005b6102b760048036038101906102b29190611a3d565b610a4b565b005b6102d360048036038101906102ce9190611b86565b610ae2565b005b6102ef60048036038101906102ea9190611a3d565b610bc9565b005b61030b60048036038101906103069190611b59565b610c5e565b005b610315610da1565b6040516103229190611b3e565b60405180910390f35b61034560048036038101906103409190611c44565b610dcb565b005b610361600480360381019061035c9190611b59565b610e04565b005b61037d60048036038101906103789190611b59565b610e87565b005b610387610f91565b508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146103f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ed90611d70565b60405180910390fd5b61040385848460006110c1565b61041085848360026110c1565b61041d85858360026111ec565b5050505050565b61042c610f91565b508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161461049b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049290611e02565b60405180910390fd5b6104a784836001611317565b6104b484848360026110c1565b50505050565b6104c2610f91565b508173ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052890611e02565b60405180910390fd5b61053e83838360026110c1565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61057561151d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db90611e94565b60405180910390fd5b600360149054906101000a900460ff16610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062a90611f26565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6106c0610f91565b5060008490506000848611156106d8578491506106e7565b85856106e49190611f75565b90505b6106f589888a85600361159b565b61070389883286600461159b565b600081111561071a5761071989888360006110c1565b5b61072789898660016110c1565b505050505050505050565b61073a610f91565b508373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a090611e02565b60405180910390fd5b6107b685858460016110c1565b6107c385848360026111ec565b5050505050565b6107d261151d565b6000600360146101000a81548160ff021916908315150217905550565b6107f761151d565b61080160006116c9565b565b61080b610f91565b508473ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16148061087157508373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16145b6108b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a79061201b565b60405180910390fd5b6108bd86868460016110c1565b6108ca86858560006110c1565b6108d786858360046110c1565b505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610910610f91565b508173ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff161461097f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097690611e02565b60405180910390fd5b61098b83826002611317565b505050565b61099861151d565b6000600160146101000a81548160ff021916908315150217905550565b6109bd610f91565b508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2390611d70565b60405180910390fd5b610a3984848460026110c1565b610a4584826004611317565b50505050565b610a53610f91565b508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab990611d70565b60405180910390fd5b610acf84848460006110c1565b610adc84848360026110c1565b50505050565b610aea610f91565b508473ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610b59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5090611d70565b60405180910390fd5b6000849050600084861115610b7057849150610b7f565b8585610b7c9190611f75565b90505b610b8d89888a85600361159b565b6000811115610ba457610ba389888360006110c1565b5b610bb189888560026110c1565b610bbe89898660016110c1565b505050505050505050565b610bd1610f91565b508273ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611d70565b60405180910390fd5b610c4c84836000611317565b610c5884826002611317565b50505050565b6000600160169054906101000a900460ff16159050808015610c91575060018060159054906101000a900460ff1660ff16105b80610cbf5750610ca03061178d565b158015610cbe575060018060159054906101000a900460ff1660ff16145b5b610cfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf5906120ad565b60405180910390fd5b60018060156101000a81548160ff021916908360ff1602179055508015610d3a5760018060166101000a81548160ff0219169083151502179055505b610d438261056d565b8015610d9d576000600160166101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610d94919061211f565b60405180910390a15b5050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610dd3610f91565b50610de186858560006110c1565b610def86853284600461159b565b610dfc86868460016111ec565b505050505050565b610e0c61151d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e72906121ac565b60405180910390fd5b610e84816116c9565b50565b610e8f61151d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610efe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef59061223e565b60405180910390fd5b600160149054906101000a900460ff16610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f44906122d0565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101a9061223e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166110646117b0565b73ffffffffffffffffffffffffffffffffffffffff16146110ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b190612362565b60405180910390fd5b6001905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663599efa6b85856040518363ffffffff1660e01b8152600401611120929190612391565b6020604051808303816000875af115801561113f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116391906123f2565b9050806111a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119c90612491565b60405180910390fd5b7f64861f505d0cfce7a0cc3629c70eb54f7de27be35939b48300935694958a98428585858560026040516111dd9594939291906125de565b60405180910390a15050505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388c2bdfe85856040518363ffffffff1660e01b815260040161124b929190612391565b6020604051808303816000875af115801561126a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128e91906123f2565b9050806112d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c7906126aa565b60405180910390fd5b7f64861f505d0cfce7a0cc3629c70eb54f7de27be35939b48300935694958a98428585858560036040516113089594939291906125de565b60405180910390a15050505050565b81600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231326040518263ffffffff1660e01b81526004016113739190611b3e565b602060405180830381865afa158015611390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b491906126df565b10156113f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ec9061277e565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635407e93c846040518263ffffffff1660e01b8152600401611452919061279e565b6020604051808303816000875af1158015611471573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149591906123f2565b9050806114d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ce90612805565b60405180910390fd5b7f64861f505d0cfce7a0cc3629c70eb54f7de27be35939b48300935694958a984284328585600060405161150f9594939291906125de565b60405180910390a150505050565b6115256117b0565b73ffffffffffffffffffffffffffffffffffffffff166115436108df565b73ffffffffffffffffffffffffffffffffffffffff1614611599576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159090612871565b60405180910390fd5b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663065e86c88686866040518463ffffffff1660e01b81526004016115fc93929190612891565b6020604051808303816000875af115801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f91906123f2565b905080611681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167890612914565b60405180910390fd5b7f64861f505d0cfce7a0cc3629c70eb54f7de27be35939b48300935694958a98428685858560016040516116b99594939291906125de565b60405180910390a1505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61181f826117d6565b810181811067ffffffffffffffff8211171561183e5761183d6117e7565b5b80604052505050565b60006118516117b8565b905061185d8282611816565b919050565b600067ffffffffffffffff82111561187d5761187c6117e7565b5b611886826117d6565b9050602081019050919050565b82818337600083830152505050565b60006118b56118b084611862565b611847565b9050828152602081018484840111156118d1576118d06117d1565b5b6118dc848285611893565b509392505050565b600082601f8301126118f9576118f86117cc565b5b81356119098482602086016118a2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061193d82611912565b9050919050565b61194d81611932565b811461195857600080fd5b50565b60008135905061196a81611944565b92915050565b6000819050919050565b61198381611970565b811461198e57600080fd5b50565b6000813590506119a08161197a565b92915050565b600080600080600060a086880312156119c2576119c16117c2565b5b600086013567ffffffffffffffff8111156119e0576119df6117c7565b5b6119ec888289016118e4565b95505060206119fd8882890161195b565b9450506040611a0e8882890161195b565b9350506060611a1f88828901611991565b9250506080611a3088828901611991565b9150509295509295909350565b60008060008060808587031215611a5757611a566117c2565b5b600085013567ffffffffffffffff811115611a7557611a746117c7565b5b611a81878288016118e4565b9450506020611a928782880161195b565b9350506040611aa387828801611991565b9250506060611ab487828801611991565b91505092959194509250565b600080600060608486031215611ad957611ad86117c2565b5b600084013567ffffffffffffffff811115611af757611af66117c7565b5b611b03868287016118e4565b9350506020611b148682870161195b565b9250506040611b2586828701611991565b9150509250925092565b611b3881611932565b82525050565b6000602082019050611b536000830184611b2f565b92915050565b600060208284031215611b6f57611b6e6117c2565b5b6000611b7d8482850161195b565b91505092915050565b600080600080600080600060e0888a031215611ba557611ba46117c2565b5b600088013567ffffffffffffffff811115611bc357611bc26117c7565b5b611bcf8a828b016118e4565b9750506020611be08a828b0161195b565b9650506040611bf18a828b0161195b565b9550506060611c028a828b01611991565b9450506080611c138a828b01611991565b93505060a0611c248a828b01611991565b92505060c0611c358a828b01611991565b91505092959891949750929550565b60008060008060008060c08789031215611c6157611c606117c2565b5b600087013567ffffffffffffffff811115611c7f57611c7e6117c7565b5b611c8b89828a016118e4565b9650506020611c9c89828a0161195b565b9550506040611cad89828a0161195b565b9450506060611cbe89828a01611991565b9350506080611ccf89828a01611991565b92505060a0611ce089828a01611991565b9150509295509295509295565b600082825260208201905092915050565b7f486976655061796d656e74733a2043616e206f6e6c792062652063616c6c656460008201527f20627920746865204a4300000000000000000000000000000000000000000000602082015250565b6000611d5a602a83611ced565b9150611d6582611cfe565b604082019050919050565b60006020820190508181036000830152611d8981611d4d565b9050919050565b7f486976655061796d656e74733a2043616e206f6e6c792062652063616c6c656460008201527f2062792074686520525000000000000000000000000000000000000000000000602082015250565b6000611dec602a83611ced565b9150611df782611d90565b604082019050919050565b60006020820190508181036000830152611e1b81611ddf565b9050919050565b7f486976655061796d656e74733a20546f6b656e2061646472657373206d75737460008201527f20626520646566696e6564000000000000000000000000000000000000000000602082015250565b6000611e7e602b83611ced565b9150611e8982611e22565b604082019050919050565b60006020820190508181036000830152611ead81611e71565b9050919050565b7f48697665546f6b656e3a2063616e4368616e6765546f6b656e4164647265737360008201527f2069732064697361626c65640000000000000000000000000000000000000000602082015250565b6000611f10602c83611ced565b9150611f1b82611eb4565b604082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f8082611970565b9150611f8b83611970565b9250828203905081811115611fa357611fa2611f46565b5b92915050565b7f486976655061796d656e74733a2043616e206f6e6c792062652063616c6c656460008201527f20627920746865205250206f72204a4300000000000000000000000000000000602082015250565b6000612005603083611ced565b915061201082611fa9565b604082019050919050565b6000602082019050818103600083015261203481611ff8565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612097602e83611ced565b91506120a28261203b565b604082019050919050565b600060208201905081810360008301526120c68161208a565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006121096121046120ff846120cd565b6120e4565b6120d7565b9050919050565b612119816120ee565b82525050565b60006020820190506121346000830184612110565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612196602683611ced565b91506121a18261213a565b604082019050919050565b600060208201905081810360008301526121c581612189565b9050919050565b7f436f6e74726f6c6c65724f776e61626c653a20436f6e74726f6c6c657220616460008201527f6472657373206d75737420626520646566696e65640000000000000000000000602082015250565b6000612228603583611ced565b9150612233826121cc565b604082019050919050565b600060208201905081810360008301526122578161221b565b9050919050565b7f436f6e74726f6c6c65724f776e61626c653a2063616e4368616e6765436f6e7460008201527f726f6c6c6572416464726573732069732064697361626c656400000000000000602082015250565b60006122ba603983611ced565b91506122c58261225e565b604082019050919050565b600060208201905081810360008301526122e9816122ad565b9050919050565b7f436f6e74726f6c6c65724f776e61626c653a204f6e6c792074686520636f6e7460008201527f726f6c6c65722063616e2063616c6c2074686973206d6574686f640000000000602082015250565b600061234c603b83611ced565b9150612357826122f0565b604082019050919050565b6000602082019050818103600083015261237b8161233f565b9050919050565b61238b81611970565b82525050565b60006040820190506123a66000830185611b2f565b6123b36020830184612382565b9392505050565b60008115159050919050565b6123cf816123ba565b81146123da57600080fd5b50565b6000815190506123ec816123c6565b92915050565b600060208284031215612408576124076117c2565b5b6000612416848285016123dd565b91505092915050565b7f486976655061796d656e74733a20526566756e6420657363726f77206661696c60008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b600061247b602283611ced565b91506124868261241f565b604082019050919050565b600060208201905081810360008301526124aa8161246e565b9050919050565b600081519050919050565b60005b838110156124da5780820151818401526020810190506124bf565b60008484015250505050565b60006124f1826124b1565b6124fb8185611ced565b935061250b8185602086016124bc565b612514816117d6565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061255f5761255e61251f565b5b50565b60008190506125708261254e565b919050565b600061258082612562565b9050919050565b61259081612575565b82525050565b600481106125a7576125a661251f565b5b50565b60008190506125b882612596565b919050565b60006125c8826125aa565b9050919050565b6125d8816125bd565b82525050565b600060a08201905081810360008301526125f881886124e6565b90506126076020830187611b2f565b6126146040830186612382565b6126216060830185612587565b61262e60808301846125cf565b9695505050505050565b7f486976655061796d656e74733a20536c61736820657363726f77206661696c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612694602183611ced565b915061269f82612638565b604082019050919050565b600060208201905081810360008301526126c381612687565b9050919050565b6000815190506126d98161197a565b92915050565b6000602082840312156126f5576126f46117c2565b5b6000612703848285016126ca565b91505092915050565b7f486976655061796d656e74733a20496e73756666696369656e742062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612768602283611ced565b91506127738261270c565b604082019050919050565b600060208201905081810360008301526127978161275b565b9050919050565b60006020820190506127b36000830184612382565b92915050565b7f486976655061796d656e74733a2050617920657363726f77206661696c656400600082015250565b60006127ef601f83611ced565b91506127fa826127b9565b602082019050919050565b6000602082019050818103600083015261281e816127e2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061285b602083611ced565b915061286682612825565b602082019050919050565b6000602082019050818103600083015261288a8161284e565b9050919050565b60006060820190506128a66000830186611b2f565b6128b36020830185611b2f565b6128c06040830184612382565b949350505050565b7f486976655061796d656e74733a20506179206a6f62206661696c656400000000600082015250565b60006128fe601c83611ced565b9150612909826128c8565b602082019050919050565b6000602082019050818103600083015261292d816128f1565b905091905056fea2646970667358221220eddeb7317c85aeb10e9700a89ed803e89f7ab2a45f227f05b3fe5dc56a99dfe764736f6c63430008150033",
  "devdoc": {
    "events": {
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "Payment(string,address,uint256,uint8,uint8)": {
        "notice": "Events"
      }
    },
    "kind": "user",
    "methods": {
      "addResult(string,address,uint256,uint256)": {
        "notice": "Results"
      },
      "agreeResourceProvider(string,address,uint256)": {
        "notice": "Agreements"
      },
      "mediationAcceptResult(string,address,address,uint256,uint256,uint256,uint256)": {
        "notice": "Mediation"
      },
      "timeoutAgreeRefundResourceProvider(string,address,uint256)": {
        "notice": "Timeouts"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 506,
        "contract": "contracts/HivePayments.sol:HivePayments",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1483,
        "contract": "contracts/HivePayments.sol:HivePayments",
        "label": "controllerAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1486,
        "contract": "contracts/HivePayments.sol:HivePayments",
        "label": "canChangeControllerAddress",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 6,
        "contract": "contracts/HivePayments.sol:HivePayments",
        "label": "_initialized",
        "offset": 21,
        "slot": "1",
        "type": "t_uint8"
      },
      {
        "astId": 9,
        "contract": "contracts/HivePayments.sol:HivePayments",
        "label": "_initializing",
        "offset": 22,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 3256,
        "contract": "contracts/HivePayments.sol:HivePayments",
        "label": "tokenAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 3259,
        "contract": "contracts/HivePayments.sol:HivePayments",
        "label": "tokenContract",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IHiveToken)6250"
      },
      {
        "astId": 3262,
        "contract": "contracts/HivePayments.sol:HivePayments",
        "label": "canChangeTokenAddress",
        "offset": 20,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 3294,
        "contract": "contracts/HivePayments.sol:HivePayments",
        "label": "accountNames",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IHiveToken)6250": {
        "encoding": "inplace",
        "label": "contract IHiveToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}