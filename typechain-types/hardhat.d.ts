/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Pausable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ControllerOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ControllerOwnable__factory>;
    getContractFactory(
      name: "ExampleClient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExampleClient__factory>;
    getContractFactory(
      name: "HiveController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HiveController__factory>;
    getContractFactory(
      name: "HiveMediationRandom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HiveMediationRandom__factory>;
    getContractFactory(
      name: "HiveOnChainJobCreator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HiveOnChainJobCreator__factory>;
    getContractFactory(
      name: "HivePayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HivePayments__factory>;
    getContractFactory(
      name: "HivePaymentsTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HivePaymentsTestable__factory>;
    getContractFactory(
      name: "HiveStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HiveStorage__factory>;
    getContractFactory(
      name: "HiveStorageTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HiveStorageTestable__factory>;
    getContractFactory(
      name: "HiveToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HiveToken__factory>;
    getContractFactory(
      name: "HiveTokenTestable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HiveTokenTestable__factory>;
    getContractFactory(
      name: "HiveUsers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HiveUsers__factory>;
    getContractFactory(
      name: "IHiveController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHiveController__factory>;
    getContractFactory(
      name: "IHiveJobClient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHiveJobClient__factory>;
    getContractFactory(
      name: "IHiveJobManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHiveJobManager__factory>;
    getContractFactory(
      name: "IHiveMediationHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHiveMediationHandler__factory>;
    getContractFactory(
      name: "IHiveMediationRequester",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHiveMediationRequester__factory>;
    getContractFactory(
      name: "IHivePayments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHivePayments__factory>;
    getContractFactory(
      name: "IHiveStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHiveStorage__factory>;
    getContractFactory(
      name: "IHiveToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHiveToken__factory>;
    getContractFactory(
      name: "IHiveUsers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHiveUsers__factory>;

    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Pausable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ControllerOwnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ControllerOwnable>;
    getContractAt(
      name: "ExampleClient",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ExampleClient>;
    getContractAt(
      name: "HiveController",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HiveController>;
    getContractAt(
      name: "HiveMediationRandom",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HiveMediationRandom>;
    getContractAt(
      name: "HiveOnChainJobCreator",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HiveOnChainJobCreator>;
    getContractAt(
      name: "HivePayments",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HivePayments>;
    getContractAt(
      name: "HivePaymentsTestable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HivePaymentsTestable>;
    getContractAt(
      name: "HiveStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HiveStorage>;
    getContractAt(
      name: "HiveStorageTestable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HiveStorageTestable>;
    getContractAt(
      name: "HiveToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HiveToken>;
    getContractAt(
      name: "HiveTokenTestable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HiveTokenTestable>;
    getContractAt(
      name: "HiveUsers",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HiveUsers>;
    getContractAt(
      name: "IHiveController",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHiveController>;
    getContractAt(
      name: "IHiveJobClient",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHiveJobClient>;
    getContractAt(
      name: "IHiveJobManager",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHiveJobManager>;
    getContractAt(
      name: "IHiveMediationHandler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHiveMediationHandler>;
    getContractAt(
      name: "IHiveMediationRequester",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHiveMediationRequester>;
    getContractAt(
      name: "IHivePayments",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHivePayments>;
    getContractAt(
      name: "IHiveStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHiveStorage>;
    getContractAt(
      name: "IHiveToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHiveToken>;
    getContractAt(
      name: "IHiveUsers",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHiveUsers>;

    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Pausable>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ControllerOwnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ControllerOwnable>;
    deployContract(
      name: "ExampleClient",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExampleClient>;
    deployContract(
      name: "HiveController",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveController>;
    deployContract(
      name: "HiveMediationRandom",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveMediationRandom>;
    deployContract(
      name: "HiveOnChainJobCreator",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveOnChainJobCreator>;
    deployContract(
      name: "HivePayments",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HivePayments>;
    deployContract(
      name: "HivePaymentsTestable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HivePaymentsTestable>;
    deployContract(
      name: "HiveStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveStorage>;
    deployContract(
      name: "HiveStorageTestable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveStorageTestable>;
    deployContract(
      name: "HiveToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveToken>;
    deployContract(
      name: "HiveTokenTestable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveTokenTestable>;
    deployContract(
      name: "HiveUsers",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveUsers>;
    deployContract(
      name: "IHiveController",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveController>;
    deployContract(
      name: "IHiveJobClient",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveJobClient>;
    deployContract(
      name: "IHiveJobManager",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveJobManager>;
    deployContract(
      name: "IHiveMediationHandler",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveMediationHandler>;
    deployContract(
      name: "IHiveMediationRequester",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveMediationRequester>;
    deployContract(
      name: "IHivePayments",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHivePayments>;
    deployContract(
      name: "IHiveStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveStorage>;
    deployContract(
      name: "IHiveToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveToken>;
    deployContract(
      name: "IHiveUsers",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveUsers>;

    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Pausable>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ControllerOwnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ControllerOwnable>;
    deployContract(
      name: "ExampleClient",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ExampleClient>;
    deployContract(
      name: "HiveController",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveController>;
    deployContract(
      name: "HiveMediationRandom",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveMediationRandom>;
    deployContract(
      name: "HiveOnChainJobCreator",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveOnChainJobCreator>;
    deployContract(
      name: "HivePayments",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HivePayments>;
    deployContract(
      name: "HivePaymentsTestable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HivePaymentsTestable>;
    deployContract(
      name: "HiveStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveStorage>;
    deployContract(
      name: "HiveStorageTestable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveStorageTestable>;
    deployContract(
      name: "HiveToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveToken>;
    deployContract(
      name: "HiveTokenTestable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveTokenTestable>;
    deployContract(
      name: "HiveUsers",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HiveUsers>;
    deployContract(
      name: "IHiveController",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveController>;
    deployContract(
      name: "IHiveJobClient",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveJobClient>;
    deployContract(
      name: "IHiveJobManager",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveJobManager>;
    deployContract(
      name: "IHiveMediationHandler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveMediationHandler>;
    deployContract(
      name: "IHiveMediationRequester",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveMediationRequester>;
    deployContract(
      name: "IHivePayments",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHivePayments>;
    deployContract(
      name: "IHiveStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveStorage>;
    deployContract(
      name: "IHiveToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveToken>;
    deployContract(
      name: "IHiveUsers",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHiveUsers>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
