/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IHivePayments,
  IHivePaymentsInterface,
} from "../../contracts/IHivePayments";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "resourceProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "jobCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "jobCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paymentCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resultsCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeoutCollateral",
        type: "uint256",
      },
    ],
    name: "acceptResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "resourceProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "resultsCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeoutCollateral",
        type: "uint256",
      },
    ],
    name: "addResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "jobCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeoutCollateral",
        type: "uint256",
      },
    ],
    name: "agreeJobCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "resourceProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timeoutCollateral",
        type: "uint256",
      },
    ],
    name: "agreeResourceProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "jobCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timeoutCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mediationFee",
        type: "uint256",
      },
    ],
    name: "checkResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "resourceProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "jobCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "jobCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paymentCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resultsCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mediationFee",
        type: "uint256",
      },
    ],
    name: "mediationAcceptResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "resourceProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "jobCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resultsCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mediationFee",
        type: "uint256",
      },
    ],
    name: "mediationRejectResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "setTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "jobCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeoutCollateral",
        type: "uint256",
      },
    ],
    name: "timeoutAgreeRefundJobCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "resourceProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timeoutCollateral",
        type: "uint256",
      },
    ],
    name: "timeoutAgreeRefundResourceProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "resourceProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "jobCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "resultsCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeoutCollateral",
        type: "uint256",
      },
    ],
    name: "timeoutJudgeResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "resourceProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "jobCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "resultsCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mediationFee",
        type: "uint256",
      },
    ],
    name: "timeoutMediateResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        internalType: "address",
        name: "resourceProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "jobCreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeoutCollateral",
        type: "uint256",
      },
    ],
    name: "timeoutSubmitResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IHivePayments__factory {
  static readonly abi = _abi;
  static createInterface(): IHivePaymentsInterface {
    return new Interface(_abi) as IHivePaymentsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IHivePayments {
    return new Contract(address, _abi, runner) as unknown as IHivePayments;
  }
}
