/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IHiveUsers,
  IHiveUsersInterface,
} from "../../contracts/IHiveUsers";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum SharedStructs.ServiceType",
        name: "serviceType",
        type: "uint8",
      },
    ],
    name: "addUserToList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUser",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "userAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadataCID",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "enum SharedStructs.ServiceType[]",
            name: "roles",
            type: "uint8[]",
          },
        ],
        internalType: "struct SharedStructs.User",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SharedStructs.ServiceType",
        name: "serviceType",
        type: "uint8",
      },
    ],
    name: "removeUserFromList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SharedStructs.ServiceType",
        name: "serviceType",
        type: "uint8",
      },
    ],
    name: "showUsersInList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadataCID",
        type: "string",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "enum SharedStructs.ServiceType[]",
        name: "roles",
        type: "uint8[]",
      },
    ],
    name: "updateUser",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "userAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadataCID",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "enum SharedStructs.ServiceType[]",
            name: "roles",
            type: "uint8[]",
          },
        ],
        internalType: "struct SharedStructs.User",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IHiveUsers__factory {
  static readonly abi = _abi;
  static createInterface(): IHiveUsersInterface {
    return new Interface(_abi) as IHiveUsersInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IHiveUsers {
    return new Contract(address, _abi, runner) as unknown as IHiveUsers;
  }
}
