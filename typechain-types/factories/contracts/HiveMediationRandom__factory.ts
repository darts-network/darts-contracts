/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  HiveMediationRandom,
  HiveMediationRandomInterface,
} from "../../contracts/HiveMediationRandom";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "dealId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mediator",
        type: "address",
      },
    ],
    name: "MediationRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "disableChangeControllerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getControllerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
    ],
    name: "getMediator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
    ],
    name: "mediationAcceptResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
    ],
    name: "mediationRejectResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "dealId",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "solver",
                type: "address",
              },
              {
                internalType: "address",
                name: "jobCreator",
                type: "address",
              },
              {
                internalType: "address",
                name: "resourceProvider",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "mediators",
                type: "address[]",
              },
            ],
            internalType: "struct SharedStructs.DealMembers",
            name: "members",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "timeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateral",
                    type: "uint256",
                  },
                ],
                internalType: "struct SharedStructs.DealTimeout",
                name: "agree",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "timeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateral",
                    type: "uint256",
                  },
                ],
                internalType: "struct SharedStructs.DealTimeout",
                name: "submitResults",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "timeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateral",
                    type: "uint256",
                  },
                ],
                internalType: "struct SharedStructs.DealTimeout",
                name: "judgeResults",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "timeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "collateral",
                    type: "uint256",
                  },
                ],
                internalType: "struct SharedStructs.DealTimeout",
                name: "mediateResults",
                type: "tuple",
              },
            ],
            internalType: "struct SharedStructs.DealTimeouts",
            name: "timeouts",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "instructionPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "paymentCollateral",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resultsCollateralMultiple",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mediationFee",
                type: "uint256",
              },
            ],
            internalType: "struct SharedStructs.DealPricing",
            name: "pricing",
            type: "tuple",
          },
        ],
        internalType: "struct SharedStructs.Deal",
        name: "deal",
        type: "tuple",
      },
    ],
    name: "mediationRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controllerAddress",
        type: "address",
      },
    ],
    name: "setControllerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260018060146101000a81548160ff02191690831515021790555034801561002a57600080fd5b5061004761003c61004c60201b60201c565b61005460201b60201c565b610118565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611a0e806101276000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610116578063a2bffa0014610134578063a470295814610164578063c57380a21461016e578063f2fde38b1461018c578063f3d3d448146101a8576100a9565b806370bea207146100ae578063715018a6146100ca57806380ffdfe0146100d45780638129fc1c146100f0578063824518aa146100fa575b600080fd5b6100c860048036038101906100c39190611268565b6101c4565b005b6100d261034e565b005b6100ee60048036038101906100e991906112b1565b610362565b005b6100f8610530565b005b610114600480360381019061010f91906112b1565b610669565b005b61011e610837565b60405161012b9190611309565b60405180910390f35b61014e600480360381019061014991906112b1565b610860565b60405161015b9190611309565b60405180910390f35b61016c6108a8565b005b6101766108cd565b6040516101839190611309565b60405180910390f35b6101a660048036038101906101a19190611324565b6108f7565b005b6101c260048036038101906101bd9190611324565b61097a565b005b6101cc610a84565b506000816020015160600151514283600001516040516020016101f09291906113e3565b6040516020818303038152906040528051906020012060001c610213919061143a565b9050600082602001516060015182815181106102325761023161146b565b5b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a2906114f7565b60405180910390fd5b80600284600001516040516102c09190611517565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ffd3770121045f9427361660d6eaa8b07a2e45eca6964f5c4f041a28f21084086836000015182604051610341929190611567565b60405180910390a1505050565b610356610bb4565b6103606000610c32565b565b600073ffffffffffffffffffffffffffffffffffffffff1660028260405161038a9190611517565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361040f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610406906114f7565b60405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff166002826040516104369190611517565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b2906115e3565b60405180910390fd5b6104c36108cd565b73ffffffffffffffffffffffffffffffffffffffff166380ffdfe0826040518263ffffffff1660e01b81526004016104fb9190611603565b600060405180830381600087803b15801561051557600080fd5b505af1158015610529573d6000803e3d6000fd5b5050505050565b6000600160169054906101000a900460ff16159050808015610563575060018060159054906101000a900460ff1660ff16105b80610591575061057230610cf6565b158015610590575060018060159054906101000a900460ff1660ff16145b5b6105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790611697565b60405180910390fd5b60018060156101000a81548160ff021916908360ff160217905550801561060c5760018060166101000a81548160ff0219169083151502179055505b8015610666576000600160166101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161065d9190611709565b60405180910390a15b50565b600073ffffffffffffffffffffffffffffffffffffffff166002826040516106919190611517565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610716576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070d906114f7565b60405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff1660028260405161073d9190611517565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b9906115e3565b60405180910390fd5b6107ca6108cd565b73ffffffffffffffffffffffffffffffffffffffff1663824518aa826040518263ffffffff1660e01b81526004016108029190611603565b600060405180830381600087803b15801561081c57600080fd5b505af1158015610830573d6000803e3d6000fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006002826040516108729190611517565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6108b0610bb4565b6000600160146101000a81548160ff021916908315150217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108ff610bb4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361096e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096590611796565b60405180910390fd5b61097781610c32565b50565b610982610bb4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e890611828565b60405180910390fd5b600160149054906101000a900460ff16610a40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a37906118ba565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0d90611828565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b57610d19565b73ffffffffffffffffffffffffffffffffffffffff1614610bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba49061194c565b60405180910390fd5b6001905090565b610bbc610d19565b73ffffffffffffffffffffffffffffffffffffffff16610bda610837565b73ffffffffffffffffffffffffffffffffffffffff1614610c30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c27906119b8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d8382610d3a565b810181811067ffffffffffffffff82111715610da257610da1610d4b565b5b80604052505050565b6000610db5610d21565b9050610dc18282610d7a565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610df057610def610d4b565b5b610df982610d3a565b9050602081019050919050565b82818337600083830152505050565b6000610e28610e2384610dd5565b610dab565b905082815260208101848484011115610e4457610e43610dd0565b5b610e4f848285610e06565b509392505050565b600082601f830112610e6c57610e6b610dcb565b5b8135610e7c848260208601610e15565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eb082610e85565b9050919050565b610ec081610ea5565b8114610ecb57600080fd5b50565b600081359050610edd81610eb7565b92915050565b600067ffffffffffffffff821115610efe57610efd610d4b565b5b602082029050602081019050919050565b600080fd5b6000610f27610f2284610ee3565b610dab565b90508083825260208201905060208402830185811115610f4a57610f49610f0f565b5b835b81811015610f735780610f5f8882610ece565b845260208401935050602081019050610f4c565b5050509392505050565b600082601f830112610f9257610f91610dcb565b5b8135610fa2848260208601610f14565b91505092915050565b600060808284031215610fc157610fc0610d35565b5b610fcb6080610dab565b90506000610fdb84828501610ece565b6000830152506020610fef84828501610ece565b602083015250604061100384828501610ece565b604083015250606082013567ffffffffffffffff81111561102757611026610dc6565b5b61103384828501610f7d565b60608301525092915050565b6000819050919050565b6110528161103f565b811461105d57600080fd5b50565b60008135905061106f81611049565b92915050565b60006040828403121561108b5761108a610d35565b5b6110956040610dab565b905060006110a584828501611060565b60008301525060206110b984828501611060565b60208301525092915050565b600061010082840312156110dc576110db610d35565b5b6110e66080610dab565b905060006110f684828501611075565b600083015250604061110a84828501611075565b602083015250608061111e84828501611075565b60408301525060c061113284828501611075565b60608301525092915050565b60006080828403121561115457611153610d35565b5b61115e6080610dab565b9050600061116e84828501611060565b600083015250602061118284828501611060565b602083015250604061119684828501611060565b60408301525060606111aa84828501611060565b60608301525092915050565b60006101c082840312156111cd576111cc610d35565b5b6111d76080610dab565b9050600082013567ffffffffffffffff8111156111f7576111f6610dc6565b5b61120384828501610e57565b600083015250602082013567ffffffffffffffff81111561122757611226610dc6565b5b61123384828501610fab565b6020830152506040611247848285016110c5565b60408301525061014061125c8482850161113e565b60608301525092915050565b60006020828403121561127e5761127d610d2b565b5b600082013567ffffffffffffffff81111561129c5761129b610d30565b5b6112a8848285016111b6565b91505092915050565b6000602082840312156112c7576112c6610d2b565b5b600082013567ffffffffffffffff8111156112e5576112e4610d30565b5b6112f184828501610e57565b91505092915050565b61130381610ea5565b82525050565b600060208201905061131e60008301846112fa565b92915050565b60006020828403121561133a57611339610d2b565b5b600061134884828501610ece565b91505092915050565b6000819050919050565b61136c6113678261103f565b611351565b82525050565b600081519050919050565b600081905092915050565b60005b838110156113a657808201518184015260208101905061138b565b60008484015250505050565b60006113bd82611372565b6113c7818561137d565b93506113d7818560208601611388565b80840191505092915050565b60006113ef828561135b565b6020820191506113ff82846113b2565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114458261103f565b91506114508361103f565b9250826114605761145f61140b565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f6d65646961746f722063616e6e6f742062652030783000000000000000000000600082015250565b60006114e160168361149a565b91506114ec826114ab565b602082019050919050565b60006020820190508181036000830152611510816114d4565b9050919050565b600061152382846113b2565b915081905092915050565b600061153982611372565b611543818561149a565b9350611553818560208601611388565b61155c81610d3a565b840191505092915050565b60006040820190508181036000830152611581818561152e565b905061159060208301846112fa565b9392505050565b7f74782e6f726967696e206d75737420626520746865206d65646961746f720000600082015250565b60006115cd601e8361149a565b91506115d882611597565b602082019050919050565b600060208201905081810360008301526115fc816115c0565b9050919050565b6000602082019050818103600083015261161d818461152e565b905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611681602e8361149a565b915061168c82611625565b604082019050919050565b600060208201905081810360008301526116b081611674565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006116f36116ee6116e9846116b7565b6116ce565b6116c1565b9050919050565b611703816116d8565b82525050565b600060208201905061171e60008301846116fa565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061178060268361149a565b915061178b82611724565b604082019050919050565b600060208201905081810360008301526117af81611773565b9050919050565b7f436f6e74726f6c6c65724f776e61626c653a20436f6e74726f6c6c657220616460008201527f6472657373206d75737420626520646566696e65640000000000000000000000602082015250565b600061181260358361149a565b915061181d826117b6565b604082019050919050565b6000602082019050818103600083015261184181611805565b9050919050565b7f436f6e74726f6c6c65724f776e61626c653a2063616e4368616e6765436f6e7460008201527f726f6c6c6572416464726573732069732064697361626c656400000000000000602082015250565b60006118a460398361149a565b91506118af82611848565b604082019050919050565b600060208201905081810360008301526118d381611897565b9050919050565b7f436f6e74726f6c6c65724f776e61626c653a204f6e6c792074686520636f6e7460008201527f726f6c6c65722063616e2063616c6c2074686973206d6574686f640000000000602082015250565b6000611936603b8361149a565b9150611941826118da565b604082019050919050565b6000602082019050818103600083015261196581611929565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006119a260208361149a565b91506119ad8261196c565b602082019050919050565b600060208201905081810360008301526119d181611995565b905091905056fea2646970667358221220ef479f7cb7cd74d4d465ba34abc5c5408af16f736980516c28399a19cac017de64736f6c63430008150033";

type HiveMediationRandomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HiveMediationRandomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HiveMediationRandom__factory extends ContractFactory {
  constructor(...args: HiveMediationRandomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HiveMediationRandom & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): HiveMediationRandom__factory {
    return super.connect(runner) as HiveMediationRandom__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HiveMediationRandomInterface {
    return new Interface(_abi) as HiveMediationRandomInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HiveMediationRandom {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as HiveMediationRandom;
  }
}
