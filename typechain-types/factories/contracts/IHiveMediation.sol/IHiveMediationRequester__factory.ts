/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IHiveMediationRequester,
  IHiveMediationRequesterInterface,
} from "../../../contracts/IHiveMediation.sol/IHiveMediationRequester";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
    ],
    name: "mediationAcceptResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dealId",
        type: "string",
      },
    ],
    name: "mediationRejectResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IHiveMediationRequester__factory {
  static readonly abi = _abi;
  static createInterface(): IHiveMediationRequesterInterface {
    return new Interface(_abi) as IHiveMediationRequesterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IHiveMediationRequester {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IHiveMediationRequester;
  }
}
